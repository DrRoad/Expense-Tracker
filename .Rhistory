shiny::runApp()
runApp()
runApp()
runApp()
install.packages("bcrypt")
library(bcrypt)
pw <- "super-secret"
hash <- hashpw(pw)
identical(hash, hashpw(pw))
identical(hash, hashpw(pw, hash))
checkpw(hash, pw)
checkpw(pw, hash)
runApp()
runApp()
runApp()
runApp()
list.files()
install.packages("RSQLite")
library(RSQLite)
library(DBI)
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
DB_NAME <- "data.sqlite"
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
dbDisconnect(db)
unlink(DB_NAME)
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
dbDisconnect(db)
unlink(DB_NAME)
dbListTables(db)
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
dbListTables(db)
!("users" %in% dbListTables(db)
)
if(!("users" %in% dbListTables(db))){
df <- data.frame(id = as.numeric(character()),
user = character(),
hash = character(),
stringsAsFactors = FALSE)
}
df
library(dplyr)
library(lubridate)
filter(df, user = "abc")
filter(df, user == "abc")
is.null(filter(df, user == "abc"))
nrow(filter(df, user == "abc"))
uuid::UUIDgenerate()
uuid::UUIDgenerate()
uuid::UUIDgenerate()
uuid::UUIDgenerate(use.time = FALSE)
uuid::UUIDgenerate(use.time = FALSE)
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
df <- dbReadTable(db, TBL_USER_DATA)
TBL_USER_DATA <- "users"
df <- dbReadTable(db, TBL_USER_DATA)
if(!(TBL_USER_DATA %in% dbListTables(db))){
df <- data.frame(ID = as.numeric(character()),
USER = character(),
HASH = character(),
stringsAsFactors = FALSE)
dbWriteTable(db, TBL_USER_DATA, df)
}
df <- dbReadTable(db, TBL_USER_DATA)
df
dbSendQuery(db, paste("INSERT INTO", TBL_USER_DATA, "(ID, USER, HASH) (", nrow(df), ",", usr, ",", hsh))
DB_add_user <- function(usr, hsh){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
df <- dbReadTable(db, TBL_USER_DATA)
dbSendQuery(db, paste("INSERT INTO", TBL_USER_DATA, "(ID, USER, HASH) (", nrow(df), ",", usr, ",", hsh))
dbDisconnect(db)
}
DB_add_user("jc", hash)
hash
DB_add_user <- function(usr, hsh){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
df <- dbReadTable(db, TBL_USER_DATA)
q <- paste("INSERT INTO", TBL_USER_DATA, "(ID, USER, HASH) (", nrow(df), ",", usr, ",", hsh)
print(q)
dbSendQuery(db, q)
dbDisconnect(db)
}
DB_add_user("jc", hash)
DB_add_user <- function(usr, hsh){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
df <- dbReadTable(db, TBL_USER_DATA)
q <- paste("INSERT INTO", TBL_USER_DATA, "(ID, USER, HASH) VALUES (", nrow(df), ",", usr, ",", hsh)
print(q)
dbSendQuery(db, q)
dbDisconnect(db)
}
DB_add_user("jc", hash)
DB_add_user <- function(usr, hsh){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
df <- dbReadTable(db, TBL_USER_DATA)
q <- paste("INSERT INTO", TBL_USER_DATA, "(ID, USER, HASH) VALUEs (", nrow(df), ",", usr, ",", hsh, ")")
print(q)
dbSendQuery(db, q)
dbDisconnect(db)
}
DB_add_user("jc", hash)
DB_add_user <- function(usr, hsh){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
df <- dbReadTable(db, TBL_USER_DATA)
q <- paste("INSERT INTO", TBL_USER_DATA, "(ID, USER, HASH) VALUEs (", paste("", nrow(df), ",", usr, ",", hsh, "", sep="'"), ")")
print(q)
dbSendQuery(db, q)
dbDisconnect(db)
}
DB_add_user("jc", hash)
df <- dbReadTable(db, TBL_USER_DATA)
df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
